// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: rowDataService.proto

package rowdata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用于添加trainingSummary
type TrainingSummaryAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_name"
	TrainingName string `protobuf:"bytes,1,opt,name=TrainingName,proto3" json:"TrainingName,omitempty"`
	// @inject_tag: json:"train_date"
	TrainDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=TrainDate,proto3" json:"TrainDate,omitempty"`
	// @inject_tag: json:"event_gender"
	EventGender string `protobuf:"bytes,3,opt,name=EventGender,proto3" json:"EventGender,omitempty"`
	// @inject_tag: json:"event_people_type"
	EventPeopleType string `protobuf:"bytes,4,opt,name=EventPeopleType,proto3" json:"EventPeopleType,omitempty"`
	// @inject_tag: json:"event_scale"
	EventScale string `protobuf:"bytes,5,opt,name=EventScale,proto3" json:"EventScale,omitempty"`
	// @inject_tag: json:"event"
	Event string `protobuf:"bytes,6,opt,name=Event,proto3" json:"Event,omitempty"`
	// @inject_tag: json:"weather"
	Weather string `protobuf:"bytes,7,opt,name=Weather,proto3" json:"Weather,omitempty"`
	// @inject_tag: json:"temp"
	Temp int32 `protobuf:"varint,8,opt,name=Temp,proto3" json:"Temp,omitempty"`
	// @inject_tag: json:"wind_dir"
	WindDir string `protobuf:"bytes,9,opt,name=WindDir,proto3" json:"WindDir,omitempty"`
	// @inject_tag: json:"loc"
	Loc string `protobuf:"bytes,10,opt,name=Loc,proto3" json:"Loc,omitempty"`
	// @inject_tag: json:"coach"
	Coach string `protobuf:"bytes,11,opt,name=Coach,proto3" json:"Coach,omitempty"`
	// @inject_tag: json:"sample_count"
	SampleCount int32 `protobuf:"varint,12,opt,name=SampleCount,proto3" json:"SampleCount,omitempty"`
	// @inject_tag: json:"remark"
	Remark string `protobuf:"bytes,13,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *TrainingSummaryAddRequest) Reset() {
	*x = TrainingSummaryAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryAddRequest) ProtoMessage() {}

func (x *TrainingSummaryAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryAddRequest.ProtoReflect.Descriptor instead.
func (*TrainingSummaryAddRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{0}
}

func (x *TrainingSummaryAddRequest) GetTrainingName() string {
	if x != nil {
		return x.TrainingName
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetTrainDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TrainDate
	}
	return nil
}

func (x *TrainingSummaryAddRequest) GetEventGender() string {
	if x != nil {
		return x.EventGender
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetEventPeopleType() string {
	if x != nil {
		return x.EventPeopleType
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetEventScale() string {
	if x != nil {
		return x.EventScale
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetWeather() string {
	if x != nil {
		return x.Weather
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetTemp() int32 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *TrainingSummaryAddRequest) GetWindDir() string {
	if x != nil {
		return x.WindDir
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetLoc() string {
	if x != nil {
		return x.Loc
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetCoach() string {
	if x != nil {
		return x.Coach
	}
	return ""
}

func (x *TrainingSummaryAddRequest) GetSampleCount() int32 {
	if x != nil {
		return x.SampleCount
	}
	return 0
}

func (x *TrainingSummaryAddRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type TrainingSummaryGetRequset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_summary"
	TrainingSummary *TrainingSummaryModel `protobuf:"bytes,1,opt,name=TrainingSummary,proto3" json:"TrainingSummary,omitempty"`
	// @inject_tag: json:"set"
	Set bool `protobuf:"varint,2,opt,name=Set,proto3" json:"Set,omitempty"`
	// @inject_tag: json:"set_training_id"
	SetTrainingId bool `protobuf:"varint,3,opt,name=SetTrainingId,proto3" json:"SetTrainingId,omitempty"`
	// @inject_tag: json:"set_training_name"
	SetTrainingName bool `protobuf:"varint,4,opt,name=SetTrainingName,proto3" json:"SetTrainingName,omitempty"`
	// @inject_tag: json:"set_training_date"
	SetTrainingDate bool `protobuf:"varint,5,opt,name=SetTrainingDate,proto3" json:"SetTrainingDate,omitempty"`
	// @inject_tag: json:"set_event_gender"
	SetEventGender bool `protobuf:"varint,6,opt,name=SetEventGender,proto3" json:"SetEventGender,omitempty"`
	// @inject_tag: json:"set_event_people_type"
	SetEventPeopleType bool `protobuf:"varint,7,opt,name=SetEventPeopleType,proto3" json:"SetEventPeopleType,omitempty"`
	// @inject_tag: json:"set_event_scale"
	SetEventScale bool `protobuf:"varint,8,opt,name=SetEventScale,proto3" json:"SetEventScale,omitempty"`
	// @inject_tag: json:"set_event"
	SetEvent bool `protobuf:"varint,9,opt,name=SetEvent,proto3" json:"SetEvent,omitempty"`
	// @inject_tag: json:"set_weather"
	SetWeather bool `protobuf:"varint,10,opt,name=SetWeather,proto3" json:"SetWeather,omitempty"`
	// @inject_tag: json:"set_temp"
	SetTemp bool `protobuf:"varint,11,opt,name=SetTemp,proto3" json:"SetTemp,omitempty"`
	// @inject_tag: json:"set_wind_dir"
	SetWindDir bool `protobuf:"varint,12,opt,name=SetWindDir,proto3" json:"SetWindDir,omitempty"`
	// @inject_tag: json:"set_loc"
	SetLoc bool `protobuf:"varint,13,opt,name=SetLoc,proto3" json:"SetLoc,omitempty"`
	// @inject_tag: json:"set_coach"
	SetCoach bool `protobuf:"varint,14,opt,name=SetCoach,proto3" json:"SetCoach,omitempty"`
	// @inject_tag: json:"set_sample_count"
	SetSampleCount bool `protobuf:"varint,15,opt,name=SetSampleCount,proto3" json:"SetSampleCount,omitempty"`
	// @inject_tag: json:"set_remark"
	SetRemark bool `protobuf:"varint,16,opt,name=SetRemark,proto3" json:"SetRemark,omitempty"`
}

func (x *TrainingSummaryGetRequset) Reset() {
	*x = TrainingSummaryGetRequset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryGetRequset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryGetRequset) ProtoMessage() {}

func (x *TrainingSummaryGetRequset) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryGetRequset.ProtoReflect.Descriptor instead.
func (*TrainingSummaryGetRequset) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{1}
}

func (x *TrainingSummaryGetRequset) GetTrainingSummary() *TrainingSummaryModel {
	if x != nil {
		return x.TrainingSummary
	}
	return nil
}

func (x *TrainingSummaryGetRequset) GetSet() bool {
	if x != nil {
		return x.Set
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetTrainingId() bool {
	if x != nil {
		return x.SetTrainingId
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetTrainingName() bool {
	if x != nil {
		return x.SetTrainingName
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetTrainingDate() bool {
	if x != nil {
		return x.SetTrainingDate
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetEventGender() bool {
	if x != nil {
		return x.SetEventGender
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetEventPeopleType() bool {
	if x != nil {
		return x.SetEventPeopleType
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetEventScale() bool {
	if x != nil {
		return x.SetEventScale
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetEvent() bool {
	if x != nil {
		return x.SetEvent
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetWeather() bool {
	if x != nil {
		return x.SetWeather
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetTemp() bool {
	if x != nil {
		return x.SetTemp
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetWindDir() bool {
	if x != nil {
		return x.SetWindDir
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetLoc() bool {
	if x != nil {
		return x.SetLoc
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetCoach() bool {
	if x != nil {
		return x.SetCoach
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetSampleCount() bool {
	if x != nil {
		return x.SetSampleCount
	}
	return false
}

func (x *TrainingSummaryGetRequset) GetSetRemark() bool {
	if x != nil {
		return x.SetRemark
	}
	return false
}

type TrainingSummaryGetByTrainingNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_name"
	TrainingName string `protobuf:"bytes,1,opt,name=TrainingName,proto3" json:"TrainingName,omitempty"`
}

func (x *TrainingSummaryGetByTrainingNameRequest) Reset() {
	*x = TrainingSummaryGetByTrainingNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryGetByTrainingNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryGetByTrainingNameRequest) ProtoMessage() {}

func (x *TrainingSummaryGetByTrainingNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryGetByTrainingNameRequest.ProtoReflect.Descriptor instead.
func (*TrainingSummaryGetByTrainingNameRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{2}
}

func (x *TrainingSummaryGetByTrainingNameRequest) GetTrainingName() string {
	if x != nil {
		return x.TrainingName
	}
	return ""
}

type TrainingSummaryGetByTrainDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"train_date"
	TrainDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=TrainDate,proto3" json:"TrainDate,omitempty"`
}

func (x *TrainingSummaryGetByTrainDateRequest) Reset() {
	*x = TrainingSummaryGetByTrainDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryGetByTrainDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryGetByTrainDateRequest) ProtoMessage() {}

func (x *TrainingSummaryGetByTrainDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryGetByTrainDateRequest.ProtoReflect.Descriptor instead.
func (*TrainingSummaryGetByTrainDateRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{3}
}

func (x *TrainingSummaryGetByTrainDateRequest) GetTrainDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TrainDate
	}
	return nil
}

type TrainingSummaryGetByEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"event"
	Event string `protobuf:"bytes,1,opt,name=Event,proto3" json:"Event,omitempty"`
}

func (x *TrainingSummaryGetByEventRequest) Reset() {
	*x = TrainingSummaryGetByEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryGetByEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryGetByEventRequest) ProtoMessage() {}

func (x *TrainingSummaryGetByEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryGetByEventRequest.ProtoReflect.Descriptor instead.
func (*TrainingSummaryGetByEventRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{4}
}

func (x *TrainingSummaryGetByEventRequest) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

type TrainingSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_summary"
	TrainingSummaryDetail *TrainingSummaryModel `protobuf:"bytes,1,opt,name=trainingSummaryDetail,proto3" json:"trainingSummaryDetail,omitempty"`
	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *TrainingSummaryResponse) Reset() {
	*x = TrainingSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryResponse) ProtoMessage() {}

func (x *TrainingSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryResponse.ProtoReflect.Descriptor instead.
func (*TrainingSummaryResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{5}
}

func (x *TrainingSummaryResponse) GetTrainingSummaryDetail() *TrainingSummaryModel {
	if x != nil {
		return x.TrainingSummaryDetail
	}
	return nil
}

func (x *TrainingSummaryResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TrainingSummaryGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_summary"
	TrainingSummary []*TrainingSummaryModel `protobuf:"bytes,1,rep,name=trainingSummary,proto3" json:"trainingSummary,omitempty"`
	// @inject_tag: "json:code"
	Code uint32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *TrainingSummaryGetResponse) Reset() {
	*x = TrainingSummaryGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryGetResponse) ProtoMessage() {}

func (x *TrainingSummaryGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryGetResponse.ProtoReflect.Descriptor instead.
func (*TrainingSummaryGetResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{6}
}

func (x *TrainingSummaryGetResponse) GetTrainingSummary() []*TrainingSummaryModel {
	if x != nil {
		return x.TrainingSummary
	}
	return nil
}

func (x *TrainingSummaryGetResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type TrainingSummaryAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// @inject_tag: json:"data"
	Data string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	// @inject_tag: json:"training_id"
	TrainingId uint32 `protobuf:"varint,4,opt,name=TrainingId,proto3" json:"TrainingId,omitempty"`
}

func (x *TrainingSummaryAddResponse) Reset() {
	*x = TrainingSummaryAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainingSummaryAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainingSummaryAddResponse) ProtoMessage() {}

func (x *TrainingSummaryAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainingSummaryAddResponse.ProtoReflect.Descriptor instead.
func (*TrainingSummaryAddResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{7}
}

func (x *TrainingSummaryAddResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TrainingSummaryAddResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TrainingSummaryAddResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TrainingSummaryAddResponse) GetTrainingId() uint32 {
	if x != nil {
		return x.TrainingId
	}
	return 0
}

// 用于添加AthleteTrainingData
type AthleteTrainingDataAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"training_id"
	TrainingId uint32 `protobuf:"varint,1,opt,name=TrainingId,proto3" json:"TrainingId,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// @inject_tag: json:"gender"
	Gender string `protobuf:"bytes,3,opt,name=Gender,proto3" json:"Gender,omitempty"`
	// @inject_tag: json:"seat"
	Seat int32 `protobuf:"varint,4,opt,name=Seat,proto3" json:"Seat,omitempty"`
	// @inject_tag: json:"side"
	Side int32 `protobuf:"varint,5,opt,name=Side,proto3" json:"Side,omitempty"`
	// @inject_tag: json:"height"
	Height float32 `protobuf:"fixed32,6,opt,name=Height,proto3" json:"Height,omitempty"`
	// @inject_tag: json:"weight"
	Weight float32 `protobuf:"fixed32,7,opt,name=Weight,proto3" json:"Weight,omitempty"`
	// @inject_tag: json:"oar_inboard"
	OarInboard float32 `protobuf:"fixed32,8,opt,name=OarInboard,proto3" json:"OarInboard,omitempty"`
	// @inject_tag: json:"oar_length"
	OarLength float32 `protobuf:"fixed32,9,opt,name=OarLength,proto3" json:"OarLength,omitempty"`
	// @inject_tag: json:"oar_blade_length"
	OarBladeLength float32 `protobuf:"fixed32,10,opt,name=OarBladeLength,proto3" json:"OarBladeLength,omitempty"`
}

func (x *AthleteTrainingDataAddRequest) Reset() {
	*x = AthleteTrainingDataAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataAddRequest) ProtoMessage() {}

func (x *AthleteTrainingDataAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataAddRequest.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataAddRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{8}
}

func (x *AthleteTrainingDataAddRequest) GetTrainingId() uint32 {
	if x != nil {
		return x.TrainingId
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AthleteTrainingDataAddRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *AthleteTrainingDataAddRequest) GetSeat() int32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetSide() int32 {
	if x != nil {
		return x.Side
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetOarInboard() float32 {
	if x != nil {
		return x.OarInboard
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetOarLength() float32 {
	if x != nil {
		return x.OarLength
	}
	return 0
}

func (x *AthleteTrainingDataAddRequest) GetOarBladeLength() float32 {
	if x != nil {
		return x.OarBladeLength
	}
	return 0
}

type AthleteTrainingDataGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json"athlete_training_data"
	AthleteTrainingData *AthleteTrainingDataModel `protobuf:"bytes,1,opt,name=AthleteTrainingData,proto3" json:"AthleteTrainingData,omitempty"`
	// @inject_tag: json:"set"
	Set bool `protobuf:"varint,2,opt,name=Set,proto3" json:"Set,omitempty"`
	// @inject_tag: json:"set_athlete_training_id"
	SetAthleteTrainingId bool `protobuf:"varint,3,opt,name=SetAthleteTrainingId,proto3" json:"SetAthleteTrainingId,omitempty"`
	// @inject_tag: json:"set_training_id"
	SetTrainingId bool `protobuf:"varint,4,opt,name=SetTrainingId,proto3" json:"SetTrainingId,omitempty"`
	// @inject_tag: json:"set_name"
	SetName bool `protobuf:"varint,5,opt,name=SetName,proto3" json:"SetName,omitempty"`
	// @inject_tag: json:"set_gender"
	SetGender bool `protobuf:"varint,6,opt,name=SetGender,proto3" json:"SetGender,omitempty"`
	// @inject_tag: json:"set_seat"
	SetSeat bool `protobuf:"varint,7,opt,name=SetSeat,proto3" json:"SetSeat,omitempty"`
	// @inject_tag: json:"set_side"
	SetSide bool `protobuf:"varint,8,opt,name=SetSide,proto3" json:"SetSide,omitempty"`
	// @inject_tag: json:"set_height"
	SetHeight bool `protobuf:"varint,9,opt,name=SetHeight,proto3" json:"SetHeight,omitempty"`
	// @inject_tag: json:"set_weight"
	SetWeight bool `protobuf:"varint,10,opt,name=SetWeight,proto3" json:"SetWeight,omitempty"`
	// @inject_tag: json:"set_oar_inboard"
	SetOarInboard bool `protobuf:"varint,11,opt,name=SetOarInboard,proto3" json:"SetOarInboard,omitempty"`
	// @inject_tag: json:"set_oar_length"
	SetOarLength bool `protobuf:"varint,12,opt,name=SetOarLength,proto3" json:"SetOarLength,omitempty"`
	// @inject_tag: json:"set_oar_blade_length"
	SetOarBladeLength bool `protobuf:"varint,13,opt,name=SetOarBladeLength,proto3" json:"SetOarBladeLength,omitempty"`
}

func (x *AthleteTrainingDataGetRequest) Reset() {
	*x = AthleteTrainingDataGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataGetRequest) ProtoMessage() {}

func (x *AthleteTrainingDataGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataGetRequest.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataGetRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{9}
}

func (x *AthleteTrainingDataGetRequest) GetAthleteTrainingData() *AthleteTrainingDataModel {
	if x != nil {
		return x.AthleteTrainingData
	}
	return nil
}

func (x *AthleteTrainingDataGetRequest) GetSet() bool {
	if x != nil {
		return x.Set
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetAthleteTrainingId() bool {
	if x != nil {
		return x.SetAthleteTrainingId
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetTrainingId() bool {
	if x != nil {
		return x.SetTrainingId
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetName() bool {
	if x != nil {
		return x.SetName
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetGender() bool {
	if x != nil {
		return x.SetGender
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetSeat() bool {
	if x != nil {
		return x.SetSeat
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetSide() bool {
	if x != nil {
		return x.SetSide
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetHeight() bool {
	if x != nil {
		return x.SetHeight
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetWeight() bool {
	if x != nil {
		return x.SetWeight
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetOarInboard() bool {
	if x != nil {
		return x.SetOarInboard
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetOarLength() bool {
	if x != nil {
		return x.SetOarLength
	}
	return false
}

func (x *AthleteTrainingDataGetRequest) GetSetOarBladeLength() bool {
	if x != nil {
		return x.SetOarBladeLength
	}
	return false
}

type AthleteTrainingDataGetByName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *AthleteTrainingDataGetByName) Reset() {
	*x = AthleteTrainingDataGetByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataGetByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataGetByName) ProtoMessage() {}

func (x *AthleteTrainingDataGetByName) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataGetByName.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataGetByName) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{10}
}

func (x *AthleteTrainingDataGetByName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AthleteTrainingDataAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// @inject_tag: json:"data"
	Data string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	// @inject_tag: json:"athlete_training_id"
	AthleteTrainingId uint32 `protobuf:"varint,4,opt,name=AthleteTrainingId,proto3" json:"AthleteTrainingId,omitempty"`
}

func (x *AthleteTrainingDataAddResponse) Reset() {
	*x = AthleteTrainingDataAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataAddResponse) ProtoMessage() {}

func (x *AthleteTrainingDataAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataAddResponse.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataAddResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{11}
}

func (x *AthleteTrainingDataAddResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AthleteTrainingDataAddResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AthleteTrainingDataAddResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *AthleteTrainingDataAddResponse) GetAthleteTrainingId() uint32 {
	if x != nil {
		return x.AthleteTrainingId
	}
	return 0
}

type AthleteTrainingDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"athlete_training_data"
	AthleteTrainingDataDetail []*AthleteTrainingDataModel `protobuf:"bytes,1,rep,name=athleteTrainingDataDetail,proto3" json:"athleteTrainingDataDetail,omitempty"`
	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *AthleteTrainingDataResponse) Reset() {
	*x = AthleteTrainingDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataResponse) ProtoMessage() {}

func (x *AthleteTrainingDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataResponse.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{12}
}

func (x *AthleteTrainingDataResponse) GetAthleteTrainingDataDetail() []*AthleteTrainingDataModel {
	if x != nil {
		return x.AthleteTrainingDataDetail
	}
	return nil
}

func (x *AthleteTrainingDataResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type AthleteTrainingDataGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"athlete_training_data"
	AthleteTrainingData []*AthleteTrainingDataModel `protobuf:"bytes,1,rep,name=athleteTrainingData,proto3" json:"athleteTrainingData,omitempty"`
	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *AthleteTrainingDataGetResponse) Reset() {
	*x = AthleteTrainingDataGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AthleteTrainingDataGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AthleteTrainingDataGetResponse) ProtoMessage() {}

func (x *AthleteTrainingDataGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AthleteTrainingDataGetResponse.ProtoReflect.Descriptor instead.
func (*AthleteTrainingDataGetResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{13}
}

func (x *AthleteTrainingDataGetResponse) GetAthleteTrainingData() []*AthleteTrainingDataModel {
	if x != nil {
		return x.AthleteTrainingData
	}
	return nil
}

func (x *AthleteTrainingDataGetResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SampleMetricsGetByAthleteTrainingIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"athlete_training_id"
	AthleteTrainingId uint32 `protobuf:"varint,1,opt,name=AthleteTrainingId,proto3" json:"AthleteTrainingId,omitempty"`
}

func (x *SampleMetricsGetByAthleteTrainingIdRequest) Reset() {
	*x = SampleMetricsGetByAthleteTrainingIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleMetricsGetByAthleteTrainingIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleMetricsGetByAthleteTrainingIdRequest) ProtoMessage() {}

func (x *SampleMetricsGetByAthleteTrainingIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleMetricsGetByAthleteTrainingIdRequest.ProtoReflect.Descriptor instead.
func (*SampleMetricsGetByAthleteTrainingIdRequest) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{14}
}

func (x *SampleMetricsGetByAthleteTrainingIdRequest) GetAthleteTrainingId() uint32 {
	if x != nil {
		return x.AthleteTrainingId
	}
	return 0
}

type SampleMetricsGetByAthleteTrainingIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"sample_metrics"
	SampleMetrics []*SampleMetricsModel `protobuf:"bytes,1,rep,name=sampleMetrics,proto3" json:"sampleMetrics,omitempty"`
	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *SampleMetricsGetByAthleteTrainingIdResponse) Reset() {
	*x = SampleMetricsGetByAthleteTrainingIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleMetricsGetByAthleteTrainingIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleMetricsGetByAthleteTrainingIdResponse) ProtoMessage() {}

func (x *SampleMetricsGetByAthleteTrainingIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleMetricsGetByAthleteTrainingIdResponse.ProtoReflect.Descriptor instead.
func (*SampleMetricsGetByAthleteTrainingIdResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{15}
}

func (x *SampleMetricsGetByAthleteTrainingIdResponse) GetSampleMetrics() []*SampleMetricsModel {
	if x != nil {
		return x.SampleMetrics
	}
	return nil
}

func (x *SampleMetricsGetByAthleteTrainingIdResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SampleMetricsAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"code"
	Code uint32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	// @inject_tag: json:"data"
	Data string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	// @inject_tag: json:"id"
	Id uint32 `protobuf:"varint,4,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *SampleMetricsAddResponse) Reset() {
	*x = SampleMetricsAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rowDataService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SampleMetricsAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleMetricsAddResponse) ProtoMessage() {}

func (x *SampleMetricsAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rowDataService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleMetricsAddResponse.ProtoReflect.Descriptor instead.
func (*SampleMetricsAddResponse) Descriptor() ([]byte, []int) {
	return file_rowDataService_proto_rawDescGZIP(), []int{16}
}

func (x *SampleMetricsAddResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SampleMetricsAddResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SampleMetricsAddResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SampleMetricsAddResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_rowDataService_proto protoreflect.FileDescriptor

var file_rowDataService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x64, 0x6c, 0x1a, 0x12, 0x72, 0x6f, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa5, 0x03, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x6d, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57,
	0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x63, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4c, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xda, 0x04, 0x0a, 0x19, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x73, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x53,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x53, 0x65, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x53, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x53, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x53, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12,
	0x26, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x4d, 0x0a, 0x27, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x24, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x20, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x7e, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x15, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x64, 0x6c,
	0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x75, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x76, 0x0a, 0x1a, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0xa9, 0x02, 0x0a, 0x1d, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x53, 0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x57,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x61, 0x72, 0x49, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x4f, 0x61, 0x72, 0x49, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x61, 0x72, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x4f, 0x61, 0x72, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4f, 0x61, 0x72,
	0x42, 0x6c, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xfc, 0x03, 0x0a, 0x1d,
	0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a,
	0x13, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x64, 0x6c,
	0x2e, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x13, 0x41, 0x74, 0x68, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x53, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x53, 0x65, 0x74,
	0x12, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x53, 0x65, 0x74, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x65, 0x74, 0x53, 0x69, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x65, 0x74, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x53, 0x65, 0x74, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4f, 0x61, 0x72, 0x49, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x53, 0x65, 0x74, 0x4f, 0x61,
	0x72, 0x49, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4f,
	0x61, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x53, 0x65, 0x74, 0x4f, 0x61, 0x72, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x4f, 0x61, 0x72, 0x42, 0x6c, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x53, 0x65, 0x74, 0x4f, 0x61, 0x72, 0x42,
	0x6c, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x1c, 0x61, 0x74,
	0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x88,
	0x01, 0x0a, 0x1e, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x41,
	0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x61, 0x74,
	0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x19, 0x61, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x64, 0x6c, 0x2e, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x19, 0x61, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1e, 0x61,
	0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x13, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x64, 0x6c,
	0x2e, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x13, 0x61, 0x74, 0x68, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x5a, 0x0a, 0x2a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x41, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x2b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0d,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x64, 0x0a, 0x18, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x64, 0x32, 0xfc, 0x07, 0x0a, 0x0e, 0x52, 0x6f, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64,
	0x12, 0x1e, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6e, 0x0a, 0x20, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x1d, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x42, 0x79, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x19, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x12, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x73, 0x65, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x12, 0x22,
	0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x1c, 0x41, 0x74, 0x68, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x74,
	0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x20, 0x2e, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16,
	0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x10, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x41, 0x64, 0x64, 0x12, 0x17, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1d, 0x2e, 0x69,
	0x64, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x23,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x41, 0x74, 0x68, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x2f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x74, 0x68, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x41, 0x74, 0x68,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x2e, 0x2f, 0x70, 0x62, 0x2f, 0x72,
	0x6f, 0x77, 0x64, 0x61, 0x74, 0x61, 0x3b, 0x72, 0x6f, 0x77, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rowDataService_proto_rawDescOnce sync.Once
	file_rowDataService_proto_rawDescData = file_rowDataService_proto_rawDesc
)

func file_rowDataService_proto_rawDescGZIP() []byte {
	file_rowDataService_proto_rawDescOnce.Do(func() {
		file_rowDataService_proto_rawDescData = protoimpl.X.CompressGZIP(file_rowDataService_proto_rawDescData)
	})
	return file_rowDataService_proto_rawDescData
}

var file_rowDataService_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_rowDataService_proto_goTypes = []interface{}{
	(*TrainingSummaryAddRequest)(nil),                   // 0: idl.trainingSummaryAddRequest
	(*TrainingSummaryGetRequset)(nil),                   // 1: idl.trainingSummaryGetRequset
	(*TrainingSummaryGetByTrainingNameRequest)(nil),     // 2: idl.trainingSummaryGetByTrainingNameRequest
	(*TrainingSummaryGetByTrainDateRequest)(nil),        // 3: idl.trainingSummaryGetByTrainDateRequest
	(*TrainingSummaryGetByEventRequest)(nil),            // 4: idl.trainingSummaryGetByEventRequest
	(*TrainingSummaryResponse)(nil),                     // 5: idl.trainingSummaryResponse
	(*TrainingSummaryGetResponse)(nil),                  // 6: idl.trainingSummaryGetResponse
	(*TrainingSummaryAddResponse)(nil),                  // 7: idl.trainingSummaryAddResponse
	(*AthleteTrainingDataAddRequest)(nil),               // 8: idl.athleteTrainingDataAddRequest
	(*AthleteTrainingDataGetRequest)(nil),               // 9: idl.athleteTrainingDataGetRequest
	(*AthleteTrainingDataGetByName)(nil),                // 10: idl.athleteTrainingDataGetByName
	(*AthleteTrainingDataAddResponse)(nil),              // 11: idl.athleteTrainingDataAddResponse
	(*AthleteTrainingDataResponse)(nil),                 // 12: idl.athleteTrainingDataResponse
	(*AthleteTrainingDataGetResponse)(nil),              // 13: idl.athleteTrainingDataGetResponse
	(*SampleMetricsGetByAthleteTrainingIdRequest)(nil),  // 14: idl.sampleMetricsGetByAthleteTrainingIdRequest
	(*SampleMetricsGetByAthleteTrainingIdResponse)(nil), // 15: idl.sampleMetricsGetByAthleteTrainingIdResponse
	(*SampleMetricsAddResponse)(nil),                    // 16: idl.sampleMetricsAddResponse
	(*timestamppb.Timestamp)(nil),                       // 17: google.protobuf.Timestamp
	(*TrainingSummaryModel)(nil),                        // 18: idl.TrainingSummaryModel
	(*AthleteTrainingDataModel)(nil),                    // 19: idl.AthleteTrainingDataModel
	(*SampleMetricsModel)(nil),                          // 20: idl.SampleMetricsModel
}
var file_rowDataService_proto_depIdxs = []int32{
	17, // 0: idl.trainingSummaryAddRequest.TrainDate:type_name -> google.protobuf.Timestamp
	18, // 1: idl.trainingSummaryGetRequset.TrainingSummary:type_name -> idl.TrainingSummaryModel
	17, // 2: idl.trainingSummaryGetByTrainDateRequest.TrainDate:type_name -> google.protobuf.Timestamp
	18, // 3: idl.trainingSummaryResponse.trainingSummaryDetail:type_name -> idl.TrainingSummaryModel
	18, // 4: idl.trainingSummaryGetResponse.trainingSummary:type_name -> idl.TrainingSummaryModel
	19, // 5: idl.athleteTrainingDataGetRequest.AthleteTrainingData:type_name -> idl.AthleteTrainingDataModel
	19, // 6: idl.athleteTrainingDataResponse.athleteTrainingDataDetail:type_name -> idl.AthleteTrainingDataModel
	19, // 7: idl.athleteTrainingDataGetResponse.athleteTrainingData:type_name -> idl.AthleteTrainingDataModel
	20, // 8: idl.sampleMetricsGetByAthleteTrainingIdResponse.sampleMetrics:type_name -> idl.SampleMetricsModel
	0,  // 9: idl.RowDataService.TrainingSummaryAdd:input_type -> idl.trainingSummaryAddRequest
	2,  // 10: idl.RowDataService.TrainingSummaryGetByTrainingName:input_type -> idl.trainingSummaryGetByTrainingNameRequest
	3,  // 11: idl.RowDataService.TrainingSummaryGetByTrainDate:input_type -> idl.trainingSummaryGetByTrainDateRequest
	4,  // 12: idl.RowDataService.TrainingSummaryGetByEvent:input_type -> idl.trainingSummaryGetByEventRequest
	1,  // 13: idl.RowDataService.TrainingSummaryGet:input_type -> idl.trainingSummaryGetRequset
	8,  // 14: idl.RowDataService.AthleteTrainingDataAdd:input_type -> idl.athleteTrainingDataAddRequest
	10, // 15: idl.RowDataService.AthleteTrainingDataGetByName:input_type -> idl.athleteTrainingDataGetByName
	9,  // 16: idl.RowDataService.AthleteTrainingDataGet:input_type -> idl.athleteTrainingDataGetRequest
	20, // 17: idl.RowDataService.SampleMetricsAdd:input_type -> idl.SampleMetricsModel
	14, // 18: idl.RowDataService.SampleMetricsGetByAthleteTrainingId:input_type -> idl.sampleMetricsGetByAthleteTrainingIdRequest
	7,  // 19: idl.RowDataService.TrainingSummaryAdd:output_type -> idl.trainingSummaryAddResponse
	5,  // 20: idl.RowDataService.TrainingSummaryGetByTrainingName:output_type -> idl.trainingSummaryResponse
	5,  // 21: idl.RowDataService.TrainingSummaryGetByTrainDate:output_type -> idl.trainingSummaryResponse
	5,  // 22: idl.RowDataService.TrainingSummaryGetByEvent:output_type -> idl.trainingSummaryResponse
	6,  // 23: idl.RowDataService.TrainingSummaryGet:output_type -> idl.trainingSummaryGetResponse
	11, // 24: idl.RowDataService.AthleteTrainingDataAdd:output_type -> idl.athleteTrainingDataAddResponse
	12, // 25: idl.RowDataService.AthleteTrainingDataGetByName:output_type -> idl.athleteTrainingDataResponse
	13, // 26: idl.RowDataService.AthleteTrainingDataGet:output_type -> idl.athleteTrainingDataGetResponse
	16, // 27: idl.RowDataService.SampleMetricsAdd:output_type -> idl.sampleMetricsAddResponse
	15, // 28: idl.RowDataService.SampleMetricsGetByAthleteTrainingId:output_type -> idl.sampleMetricsGetByAthleteTrainingIdResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_rowDataService_proto_init() }
func file_rowDataService_proto_init() {
	if File_rowDataService_proto != nil {
		return
	}
	file_rowDataModel_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rowDataService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryGetRequset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryGetByTrainingNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryGetByTrainDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryGetByEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainingSummaryAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataGetByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AthleteTrainingDataGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleMetricsGetByAthleteTrainingIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleMetricsGetByAthleteTrainingIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rowDataService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SampleMetricsAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rowDataService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rowDataService_proto_goTypes,
		DependencyIndexes: file_rowDataService_proto_depIdxs,
		MessageInfos:      file_rowDataService_proto_msgTypes,
	}.Build()
	File_rowDataService_proto = out.File
	file_rowDataService_proto_rawDesc = nil
	file_rowDataService_proto_goTypes = nil
	file_rowDataService_proto_depIdxs = nil
}
